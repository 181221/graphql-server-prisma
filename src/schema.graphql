type Query {
  users: [User]
  movies: [Movie!]
}
type Movie {
  id: ID!
  title: String!
  requestedBy: User!
  img: String
  tmdb_id: String
  genres: [String]
  release_date: String
  vote_average: String
  overview: String
}

type Mutation {
  createToken(email: String!): AuthPayload
  getToken(email: String!): AuthPayload
  createMovie(
    title: String!
    img: String
    tmdb_id: String!
    genres: [String]
    vote_average: String
    release_date: String
    overview: String
  ): Movie
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String
  email: String!
  movies: [Movie!]!
  role: Role
}

enum Role {
  ADMIN
  CUSTOMER
}
